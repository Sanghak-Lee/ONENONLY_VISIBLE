# Generated by Django 2.2.16 on 2022-09-08 22:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auction', '0004_auto_20220908_2234'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0002_auto_20220831_0231'),
    ]

    operations = [
        migrations.CreateModel(
            name='CrowdFundingOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('ref_code', models.CharField(max_length=30)),
                ('PG', models.CharField(choices=[('BT', '계좌이체'), ('K', '카카오페이'), ('N', '네이버페이'), ('T', '토스'), ('C', '카드결제'), ('ETC', '무통장입금')], default='BT', max_length=3)),
                ('deliver_detail', models.IntegerField(blank=True, choices=[(1, '1단계'), (2, '2단계'), (3, '3단계'), (4, '4단계')], default=0)),
                ('price', models.IntegerField(blank=True, default=100000)),
                ('discount_price', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(default=1)),
                ('refund_requested', models.BooleanField(default=False)),
                ('refund_granted', models.BooleanField(default=False)),
                ('expired', models.BooleanField(default=False)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Coupon')),
                ('donation', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auction.Donation')),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auction.Placement')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '크라우드 펀딩 주문',
                'verbose_name_plural': '크라우드 펀딩 주문들',
                'ordering': ['updated'],
            },
        ),
        migrations.CreateModel(
            name='OpenFundingOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('ref_code', models.CharField(max_length=30)),
                ('PG', models.CharField(choices=[('BT', '계좌이체'), ('K', '카카오페이'), ('N', '네이버페이'), ('T', '토스'), ('C', '카드결제'), ('ETC', '무통장입금')], default='BT', max_length=3)),
                ('deliver_detail', models.IntegerField(blank=True, choices=[(1, '1단계'), (2, '2단계'), (3, '3단계'), (4, '4단계')], default=0)),
                ('price', models.IntegerField(blank=True, default=100000)),
                ('discount_price', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(default=1)),
                ('refund_requested', models.BooleanField(default=False)),
                ('refund_granted', models.BooleanField(default=False)),
                ('expired', models.BooleanField(default=False)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Coupon')),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auction.Placement')),
                ('placementbid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auction.PlacementBid')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '오픈 펀딩 주문',
                'verbose_name_plural': '오픈 펀딩 주문들',
                'ordering': ['updated'],
            },
        ),
        migrations.CreateModel(
            name='Questionanswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('a1', models.TextField(blank=True, help_text='1번 답변', null=True)),
                ('a2', models.TextField(blank=True, help_text='2번 답변', null=True)),
                ('a3', models.TextField(blank=True, help_text='3번 답변', null=True)),
                ('a4', models.TextField(blank=True, help_text='4번 답변', null=True)),
                ('a5', models.TextField(blank=True, help_text='5번 답변', null=True)),
                ('a6', models.TextField(blank=True, help_text='6번 답변', null=True)),
                ('a7', models.TextField(blank=True, help_text='7번 답변', null=True)),
                ('a8', models.TextField(blank=True, help_text='8번 답변', null=True)),
                ('a9', models.TextField(blank=True, help_text='9번 답변', null=True)),
                ('a10', models.TextField(blank=True, help_text='10번 답변', null=True)),
                ('cf_oi', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.CrowdFundingOrderItem')),
                ('of_oi', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.OpenFundingOrderItem')),
            ],
            options={
                'verbose_name': '응답지',
                'verbose_name_plural': '응답지들',
                'ordering': ['updated'],
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=30)),
                ('q1', models.TextField(blank=True, help_text='1번 질문', null=True)),
                ('q2', models.TextField(blank=True, help_text='2번 질문', null=True)),
                ('q3', models.TextField(blank=True, help_text='3번 질문', null=True)),
                ('q4', models.TextField(blank=True, help_text='4번 질문', null=True)),
                ('q5', models.TextField(blank=True, help_text='5번 질문', null=True)),
                ('q6', models.TextField(blank=True, help_text='6번 질문', null=True)),
                ('q7', models.TextField(blank=True, help_text='7번 질문', null=True)),
                ('q8', models.TextField(blank=True, help_text='8번 질문', null=True)),
                ('q9', models.TextField(blank=True, help_text='9번 질문', null=True)),
                ('q10', models.TextField(blank=True, help_text='10번 질문', null=True)),
            ],
            options={
                'verbose_name': '설문지',
                'verbose_name_plural': '설문지들',
                'ordering': ['updated'],
            },
        ),
        migrations.CreateModel(
            name='SecretFundingOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('ref_code', models.CharField(max_length=30)),
                ('PG', models.CharField(choices=[('BT', '계좌이체'), ('K', '카카오페이'), ('N', '네이버페이'), ('T', '토스'), ('C', '카드결제'), ('ETC', '무통장입금')], default='BT', max_length=3)),
                ('deliver_detail', models.IntegerField(blank=True, choices=[(1, '1단계'), (2, '2단계'), (3, '3단계'), (4, '4단계')], default=0)),
                ('price', models.IntegerField(blank=True, default=100000)),
                ('discount_price', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(default=1)),
                ('refund_requested', models.BooleanField(default=False)),
                ('refund_granted', models.BooleanField(default=False)),
                ('expired', models.BooleanField(default=False)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Coupon')),
                ('placement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auction.Placement')),
                ('placementbid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auction.PlacementBid')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '시크릿 펀딩 주문',
                'verbose_name_plural': '시크릿 펀딩 주문들',
                'ordering': ['updated'],
            },
        ),
        migrations.RenameModel(
            old_name='ElasticInfos',
            new_name='ElasticInfo',
        ),
        migrations.RemoveField(
            model_name='orderartists',
            name='artist',
        ),
        migrations.RemoveField(
            model_name='orderartists',
            name='order',
        ),
        migrations.RemoveField(
            model_name='orderartists',
            name='user',
        ),
        migrations.RemoveField(
            model_name='orderitems',
            name='artist',
        ),
        migrations.RemoveField(
            model_name='orderitems',
            name='order',
        ),
        migrations.RemoveField(
            model_name='orderitems',
            name='orderartists',
        ),
        migrations.RemoveField(
            model_name='orderitems',
            name='user',
        ),
        migrations.RemoveField(
            model_name='orders',
            name='coupon',
        ),
        migrations.RemoveField(
            model_name='orders',
            name='user',
        ),
        migrations.RemoveField(
            model_name='ordervideos',
            name='artist',
        ),
        migrations.RemoveField(
            model_name='ordervideos',
            name='orderartist',
        ),
        migrations.RemoveField(
            model_name='ordervideos',
            name='user',
        ),
        migrations.AlterModelOptions(
            name='article_comments',
            options={'ordering': ['-pk'], 'verbose_name': '게시판 댓글', 'verbose_name_plural': '게시판 댓글들'},
        ),
        migrations.AlterModelOptions(
            name='articles',
            options={'ordering': ['-created'], 'verbose_name': '게시글', 'verbose_name_plural': '게시글들'},
        ),
        migrations.AlterModelOptions(
            name='comments',
            options={'ordering': ['-pk'], 'verbose_name': '문의 답변', 'verbose_name_plural': '문의 답변들'},
        ),
        migrations.AlterModelOptions(
            name='posts',
            options={'ordering': ['-pk'], 'verbose_name': '문의글', 'verbose_name_plural': '문의글들'},
        ),
        migrations.RenameField(
            model_name='article_comments',
            old_name='update_date',
            new_name='updated',
        ),
        migrations.RenameField(
            model_name='comments',
            old_name='start_date',
            new_name='created',
        ),
        migrations.RenameField(
            model_name='posts',
            old_name='start_date',
            new_name='created',
        ),
        migrations.AddField(
            model_name='article_comments',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='articles',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='comments',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='posts',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='article_comments',
            name='text',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='articles',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='comments',
            name='text',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='posts',
            name='text',
            field=models.TextField(),
        ),
        migrations.AlterModelTable(
            name='posts',
            table='posts',
        ),
        migrations.DeleteModel(
            name='Items',
        ),
        migrations.DeleteModel(
            name='OrderArtists',
        ),
        migrations.DeleteModel(
            name='OrderItems',
        ),
        migrations.DeleteModel(
            name='Orders',
        ),
        migrations.DeleteModel(
            name='OrderVideos',
        ),
        migrations.AddField(
            model_name='questionanswer',
            name='questionnaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Questionnaire'),
        ),
        migrations.AddField(
            model_name='questionanswer',
            name='sf_oi',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.SecretFundingOrderItem'),
        ),
    ]
