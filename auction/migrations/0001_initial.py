# Generated by Django 2.2.16 on 2022-08-31 02:31

import auction.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuctionArtist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, help_text='Auction Artist Avatar', upload_to='Auction/avatar/')),
                ('name', models.TextField(default='AUCTION artist Korean name', max_length=255)),
                ('E_name', models.TextField(default='AUCTION artist English name', max_length=255)),
                ('description', models.TextField(default='AUCTION 아티스트 설명')),
                ('description_oneoff', models.CharField(max_length=50)),
                ('slug', models.SlugField(help_text='포트폴리오 index_slug.html', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='AuctionAuthorization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('is_authorized', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'AuctionAuthorization',
            },
        ),
        migrations.CreateModel(
            name='AuctionNftToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_id', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AutoBid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limit', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer', models.IntegerField()),
                ('quantity', models.IntegerField(default=1)),
                ('donation_created', models.DateTimeField(auto_now_add=True)),
                ('donation_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['placement', '-donation_modified'],
            },
        ),
        migrations.CreateModel(
            name='Placement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placement_title', models.CharField(max_length=50)),
                ('placement_title_english', models.CharField(max_length=50)),
                ('placement_description', models.CharField(max_length=400)),
                ('placement_category', models.CharField(help_text='Music, Dance, Making, etc ...', max_length=15)),
                ('thumbnail_video', models.ImageField(blank=True, help_text='Video Thumbnail', upload_to=auction.models.custom_video_path)),
                ('mp4_video', models.FileField(blank=True, help_text='Only mp4 VIDEO', upload_to=auction.models.custom_video_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4'])])),
                ('webm_video', models.FileField(blank=True, help_text='Only webm Video', upload_to=auction.models.custom_video_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['webm'])])),
                ('placement_type', models.CharField(choices=[('crowdfunding', 'Crowd Funding'), ('openfunding', 'Open Funding'), ('secretfunding', 'Secret Funding')], default='openfunding', help_text='경매 종류', max_length=20)),
                ('placement_price', models.IntegerField(default=100000)),
                ('placement_start', models.DateTimeField(default=django.utils.timezone.now)),
                ('placement_end', models.DateTimeField(default=django.utils.timezone.now)),
                ('placement_order', models.IntegerField(default=1, help_text='음수: 종료, 1 > : 진행중, 1:예정, 0:가리기')),
                ('is_encore', models.BooleanField(default=False, help_text='앵콜요청')),
                ('placement_created', models.DateTimeField(auto_now_add=True)),
                ('placement_modified', models.DateTimeField(auto_now=True)),
                ('placement_start_price', models.IntegerField(default=100000)),
                ('placement_estimated_price', models.TextField(default='AUCTION 추정가')),
                ('unit_price', models.IntegerField(default=50000)),
                ('placement_buynow_price', models.IntegerField(default=500000)),
                ('is_crowdfunding', models.BooleanField(default=False)),
                ('is_crowdfunding_finish', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-placement_order'],
            },
        ),
        migrations.CreateModel(
            name='PlacementBid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer', models.IntegerField()),
                ('confirmed', models.BooleanField(default=False)),
                ('placementbid_created', models.DateTimeField(auto_now_add=True)),
                ('placementbid_modified', models.DateTimeField(auto_now=True)),
                ('is_autobid', models.BooleanField(default=False)),
                ('is_superior', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['placement', '-offer'],
            },
        ),
        migrations.CreateModel(
            name='PlacementMemory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('history_image', models.ImageField(help_text='Remember Image', null=True, upload_to=auction.models.custom_remember_image_path)),
                ('history_thumbnail', models.ImageField(help_text='Remember Thumbnail', null=True, upload_to=auction.models.custom_remember_image_path)),
                ('oney', models.CharField(help_text='워니의 성함을 입력해주세요', max_length=10)),
                ('oney_comment', models.CharField(help_text='워니의 코멘트를 입력해주세요', max_length=50)),
                ('celeb', models.CharField(help_text='셀럽의 성함을 입력해주세요', max_length=10)),
                ('celeb_comment', models.CharField(help_text='셀럽의 코멘트를 입력해주세요', max_length=50)),
                ('placement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auction.Placement')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
    ]
